#version 430

layout(local_size_x = 1) in;

struct Boid {
    vec4 position;
    vec4 velocity;
};

layout(std430, binding = 0) buffer BoidBuffer {
    Boid boids[];
};

void main() {
    uint id = gl_GlobalInvocationID.x;
    vec3 pos = boids[id].position.xyz;
    vec3 vel = boids[id].velocity.xyz;

    // Simple update: move in current velocity direction
    pos += vel * 0.01;

    // Clamp to bounds (-4 to 4, -2 to 2, -2 to 2)
    pos.x = mod(pos.x + 4.0, 8.0) - 4.0;
    pos.y = mod(pos.y + 2.0, 4.0) - 2.0;
    pos.z = mod(pos.z + 2.0, 4.0) - 2.0;

    boids[id].position = vec4(pos, 0.0);
    boids[id].velocity = vec4(vel, 0.0); // Unchanged for now
}
